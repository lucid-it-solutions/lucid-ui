/* src/index.css */
@layer properties;
.invisible {
  visibility: hidden;
}
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}
.absolute {
  position: absolute;
}
.fixed {
  position: fixed;
}
.relative {
  position: relative;
}
.top-\[50\%\] {
  top: 50%;
}
.left-\[50\%\] {
  left: 50%;
}
.z-50 {
  z-index: 50;
}
.z-\[101\] {
  z-index: 101;
}
.container {
  width: 100%;
}
.mx-auto {
  margin-inline: auto;
}
.mt-auto {
  margin-top: auto;
}
.mb-\[5px\] {
  margin-bottom: 5px;
}
.ml-\[10px\] {
  margin-left: 10px;
}
.ml-auto {
  margin-left: auto;
}
.flex {
  display: flex;
}
.grid {
  display: grid;
}
.inline-flex {
  display: inline-flex;
}
.table {
  display: table;
}
.aspect-square {
  aspect-ratio: 1 / 1;
}
.h-\[var\(--radix-select-trigger-height\)\] {
  height: var(--radix-select-trigger-height);
}
.h-auto {
  height: auto;
}
.h-full {
  height: 100%;
}
.h-px {
  height: 1px;
}
.max-h-\[300px\] {
  max-height: 300px;
}
.min-h-\[2rem\] {
  min-height: 2rem;
}
.w-\[--radix-popover-trigger-width\] {
  width: --radix-popover-trigger-width;
}
.w-\[50\%\] {
  width: 50%;
}
.w-\[100px\] {
  width: 100px;
}
.w-\[200px\] {
  width: 200px;
}
.w-full {
  width: 100%;
}
.min-w-\[2rem\] {
  min-width: 2rem;
}
.min-w-\[5\.5rem\] {
  min-width: 5.5rem;
}
.min-w-\[8rem\] {
  min-width: 8rem;
}
.min-w-\[150px\] {
  min-width: 150px;
}
.min-w-\[var\(--radix-select-trigger-width\)\] {
  min-width: var(--radix-select-trigger-width);
}
.flex-1 {
  flex: 1;
}
.shrink {
  flex-shrink: 1;
}
.shrink-0 {
  flex-shrink: 0;
}
.border-collapse {
  border-collapse: collapse;
}
.translate-x-\[-50\%\] {
  --tw-translate-x: -50%;
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.translate-y-\[-50\%\] {
  --tw-translate-y: -50%;
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.transform {
  transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
}
.cursor-default {
  cursor: default;
}
.cursor-pointer {
  cursor: pointer;
}
.touch-none {
  touch-action: none;
}
.flex-col {
  flex-direction: column;
}
.flex-col-reverse {
  flex-direction: column-reverse;
}
.flex-row {
  flex-direction: row;
}
.flex-wrap {
  flex-wrap: wrap;
}
.items-baseline {
  align-items: baseline;
}
.items-center {
  align-items: center;
}
.justify-between {
  justify-content: space-between;
}
.justify-center {
  justify-content: center;
}
.justify-start {
  justify-content: flex-start;
}
.gap-\[10px\] {
  gap: 10px;
}
.overflow-hidden {
  overflow: hidden;
}
.overflow-x-hidden {
  overflow-x: hidden;
}
.overflow-y-auto {
  overflow-y: auto;
}
.rounded-\[5px\] {
  border-radius: 5px;
}
.rounded-\[inherit\] {
  border-radius: inherit;
}
.rounded-full {
  border-radius: calc(infinity * 1px);
}
.rounded-t-\[10px\] {
  border-top-left-radius: 10px;
  border-top-right-radius: 10px;
}
.border {
  border-style: var(--tw-border-style);
  border-width: 1px;
}
.border-2 {
  border-style: var(--tw-border-style);
  border-width: 2px;
}
.border-t {
  border-top-style: var(--tw-border-style);
  border-top-width: 1px;
}
.border-b {
  border-bottom-style: var(--tw-border-style);
  border-bottom-width: 1px;
}
.border-l {
  border-left-style: var(--tw-border-style);
  border-left-width: 1px;
}
.border-none {
  --tw-border-style: none;
  border-style: none;
}
.border-t-transparent {
  border-top-color: transparent;
}
.border-l-transparent {
  border-left-color: transparent;
}
.bg-\[\#d28c00\] {
  background-color: #d28c00;
}
.bg-\[\#e9eff6\] {
  background-color: #e9eff6;
}
.bg-transparent {
  background-color: transparent;
}
.fill-current {
  fill: currentcolor;
}
.p-\[0\.3rem\] {
  padding: 0.3rem;
}
.p-\[0\.6rem\] {
  padding: 0.6rem;
}
.p-\[1px\] {
  padding: 1px;
}
.text-center {
  text-align: center;
}
.text-\[0\.8rem\] {
  font-size: 0.8rem;
}
.text-\[0\.75rem\] {
  font-size: 0.75rem;
}
.text-\[1rem\] {
  font-size: 1rem;
}
.text-\[14px\] {
  font-size: 14px;
}
.leading-none {
  --tw-leading: 1;
  line-height: 1;
}
.text-wrap {
  text-wrap: wrap;
}
.whitespace-nowrap {
  white-space: nowrap;
}
.text-current {
  color: currentcolor;
}
.italic {
  font-style: italic;
}
.underline-offset-4 {
  text-underline-offset: 4px;
}
.placeholder-transparent {
  &::-moz-placeholder {
    color: transparent;
  }
  &::placeholder {
    color: transparent;
  }
}
.opacity-0 {
  opacity: 0%;
}
.opacity-50 {
  opacity: 50%;
}
.opacity-60 {
  opacity: 60%;
}
.opacity-70 {
  opacity: 70%;
}
.opacity-100 {
  opacity: 100%;
}
.ring {
  --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
  box-shadow:
    var(--tw-inset-shadow),
    var(--tw-inset-ring-shadow),
    var(--tw-ring-offset-shadow),
    var(--tw-ring-shadow),
    var(--tw-shadow);
}
.outline {
  outline-style: var(--tw-outline-style);
  outline-width: 1px;
}
.transition {
  transition-property:
    color,
    background-color,
    border-color,
    outline-color,
    text-decoration-color,
    fill,
    stroke,
    --tw-gradient-from,
    --tw-gradient-via,
    --tw-gradient-to,
    opacity,
    box-shadow,
    transform,
    translate,
    scale,
    rotate,
    filter,
    backdrop-filter,
    display,
    visibility,
    content-visibility,
    overlay,
    pointer-events;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.transition-colors {
  transition-property:
    color,
    background-color,
    border-color,
    outline-color,
    text-decoration-color,
    fill,
    stroke,
    --tw-gradient-from,
    --tw-gradient-via,
    --tw-gradient-to;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.transition-opacity {
  transition-property: opacity;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.duration-200 {
  --tw-duration: 200ms;
  transition-duration: 200ms;
}
.outline-none {
  --tw-outline-style: none;
  outline-style: none;
}
.select-none {
  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none;
}
.peer-disabled\:cursor-not-allowed {
  &:is(:where(.peer):disabled ~ *) {
    cursor: not-allowed;
  }
}
.peer-disabled\:opacity-70 {
  &:is(:where(.peer):disabled ~ *) {
    opacity: 70%;
  }
}
.file\:border-0 {
  &::file-selector-button {
    border-style: var(--tw-border-style);
    border-width: 0px;
  }
}
.file\:bg-transparent {
  &::file-selector-button {
    background-color: transparent;
  }
}
.focus-within\:relative {
  &:focus-within {
    position: relative;
  }
}
.focus-within\:z-20 {
  &:focus-within {
    z-index: 20;
  }
}
.hover\:bg-\[\#d28c00\]\/90 {
  &:hover {
    @media (hover: hover) {
      background-color: color-mix(in oklab, #d28c00 90%, transparent);
    }
  }
}
.hover\:underline {
  &:hover {
    @media (hover: hover) {
      text-decoration-line: underline;
    }
  }
}
.hover\:opacity-100 {
  &:hover {
    @media (hover: hover) {
      opacity: 100%;
    }
  }
}
.focus\:ring-2 {
  &:focus {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow:
      var(--tw-inset-shadow),
      var(--tw-inset-ring-shadow),
      var(--tw-ring-offset-shadow),
      var(--tw-ring-shadow),
      var(--tw-shadow);
  }
}
.focus\:ring-offset-2 {
  &:focus {
    --tw-ring-offset-width: 2px;
    --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  }
}
.focus\:outline-none {
  &:focus {
    --tw-outline-style: none;
    outline-style: none;
  }
}
.focus-visible\:ring-2 {
  &:focus-visible {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow:
      var(--tw-inset-shadow),
      var(--tw-inset-ring-shadow),
      var(--tw-ring-offset-shadow),
      var(--tw-ring-shadow),
      var(--tw-shadow);
  }
}
.focus-visible\:ring-offset-2 {
  &:focus-visible {
    --tw-ring-offset-width: 2px;
    --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  }
}
.focus-visible\:outline-none {
  &:focus-visible {
    --tw-outline-style: none;
    outline-style: none;
  }
}
.disabled\:pointer-events-none {
  &:disabled {
    pointer-events: none;
  }
}
.disabled\:cursor-not-allowed {
  &:disabled {
    cursor: not-allowed;
  }
}
.disabled\:bg-transparent {
  &:disabled {
    background-color: transparent;
  }
}
.disabled\:opacity-50 {
  &:disabled {
    opacity: 50%;
  }
}
.aria-selected\:opacity-100 {
  &[aria-selected=true] {
    opacity: 100%;
  }
}
.data-\[disabled\]\:pointer-events-none {
  &[data-disabled] {
    pointer-events: none;
  }
}
.data-\[disabled\]\:opacity-50 {
  &[data-disabled] {
    opacity: 50%;
  }
}
.data-\[disabled\=true\]\:pointer-events-none {
  &[data-disabled=true] {
    pointer-events: none;
  }
}
.data-\[disabled\=true\]\:opacity-50 {
  &[data-disabled=true] {
    opacity: 50%;
  }
}
.dark\:border-\[\#568293\] {
  @media (prefers-color-scheme: dark) {
    border-color: #568293;
  }
}
.dark\:text-\[\#568293\] {
  @media (prefers-color-scheme: dark) {
    color: #568293;
  }
}
.\[\&\>span\]\:line-clamp-1 {
  & > span {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 1;
  }
}
@property --tw-translate-x { syntax: "*"; inherits: false; initial-value: 0; }
@property --tw-translate-y { syntax: "*"; inherits: false; initial-value: 0; }
@property --tw-translate-z { syntax: "*"; inherits: false; initial-value: 0; }
@property --tw-rotate-x { syntax: "*"; inherits: false; }
@property --tw-rotate-y { syntax: "*"; inherits: false; }
@property --tw-rotate-z { syntax: "*"; inherits: false; }
@property --tw-skew-x { syntax: "*"; inherits: false; }
@property --tw-skew-y { syntax: "*"; inherits: false; }
@property --tw-border-style { syntax: "*"; inherits: false; initial-value: solid; }
@property --tw-leading { syntax: "*"; inherits: false; }
@property --tw-shadow { syntax: "*"; inherits: false; initial-value: 0 0 #0000; }
@property --tw-shadow-color { syntax: "*"; inherits: false; }
@property --tw-shadow-alpha { syntax: "<percentage>"; inherits: false; initial-value: 100%; }
@property --tw-inset-shadow { syntax: "*"; inherits: false; initial-value: 0 0 #0000; }
@property --tw-inset-shadow-color { syntax: "*"; inherits: false; }
@property --tw-inset-shadow-alpha { syntax: "<percentage>"; inherits: false; initial-value: 100%; }
@property --tw-ring-color { syntax: "*"; inherits: false; }
@property --tw-ring-shadow { syntax: "*"; inherits: false; initial-value: 0 0 #0000; }
@property --tw-inset-ring-color { syntax: "*"; inherits: false; }
@property --tw-inset-ring-shadow { syntax: "*"; inherits: false; initial-value: 0 0 #0000; }
@property --tw-ring-inset { syntax: "*"; inherits: false; }
@property --tw-ring-offset-width { syntax: "<length>"; inherits: false; initial-value: 0px; }
@property --tw-ring-offset-color { syntax: "*"; inherits: false; initial-value: #fff; }
@property --tw-ring-offset-shadow { syntax: "*"; inherits: false; initial-value: 0 0 #0000; }
@property --tw-outline-style { syntax: "*"; inherits: false; initial-value: solid; }
@property --tw-duration { syntax: "*"; inherits: false; }
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *,
    ::before,
    ::after,
    ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-border-style: solid;
      --tw-leading: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-outline-style: solid;
      --tw-duration: initial;
    }
  }
}

/* src/components/common/Modal/index.scss */
.modalBackground {
  position: fixed;
  width: 100%;
  background-color: rgba(102, 102, 102, 0.4);
  top: 0;
  left: 0;
  overflow: auto !important;
  display: grid;
  place-items: center;
  z-index: 100;
  padding: 3rem 0;
  animation: show 500ms linear 0s 1 forwards;
}
@keyframes show {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
.modalContainer {
  box-sizing: border-box;
  border: 0px solid #353535;
  border-radius: 5px;
  top: 0;
  padding: 1rem 0;
  max-width: var(--max-screen-width);
}
.modalContainer[modal-size=small] {
  width: min(95%, 20rem);
}
.modalContainer[modal-size=medium] {
  width: min(95%, 30rem);
}
.modalContainer[modal-size=medium2] {
  width: min(95%, 40rem);
}
.modalContainer[modal-size=large] {
  width: 75%;
}
.modalContainer[modal-size=xlarge] {
  width: min(95%, 100% - 6rem);
}
.modalContainer > * {
  padding: 0 1rem;
}
.modalHeaderContainer {
  padding-bottom: 20px;
}
.modalHeader {
  font-size: 1.5rem;
  font-weight: 600;
}
.contentContainer {
  display: flex;
  flex-direction: column;
  gap: 15px;
}
.footerContainer {
  display: flex;
  justify-content: space-evenly;
  gap: 15px;
}

/* src/components/common/Footer/index.scss */
.footer {
  width: 100%;
  padding: 3rem;
  padding-left: 5rem;
  color: #555555;
  background-color: rgba(238, 238, 238, 0.3137254902);
  display: flex;
  gap: 3rem;
  box-sizing: border-box;
  flex-direction: row;
  margin: 0;
}
@media (max-width: 360px) {
  .footer {
    box-sizing: none;
  }
}
@media (max-width: 1148px) {
  .footer {
    flex-direction: column;
    gap: 1.5rem;
    padding: 2rem;
    padding-left: 5rem;
    padding-right: 5rem;
  }
}
@media (max-width: 360px) {
  .footer {
    flex-direction: column;
    gap: 1.5rem;
    padding: 2rem;
    padding-left: 2rem;
    padding-right: 2rem;
  }
}
.aboutText {
  font-weight: 500;
}
.footerContainer {
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  gap: 1rem;
  flex: 1;
  font-size: 0.8rem;
  padding-bottom: 1rem;
}
.footerContainer :first-child {
  font-weight: bold;
}
.footerContainer a {
  color: #0275AB;
  font-weight: 500;
  font-size: 0.75rem;
}
.address {
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  align-items: flex-end;
  font-size: 0.8rem;
  color: #555555;
  font-weight: 600;
  gap: 2px;
  white-space: nowrap;
}
.address p {
  display: inline;
  font-weight: bold;
}
@media (max-width: 1148px) {
  .address {
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }
}
.iconLink {
  text-decoration: none;
  width: 2rem;
  height: 2rem;
  border-radius: 50%;
  color: white !important;
  background-color: #0E4C64;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
}
.iconThenText {
  display: flex;
  padding-left: 0.5rem;
  gap: 1rem;
  justify-content: flex-start;
  align-items: center;
  font-weight: 500;
}
.iconThenText :first-child {
  color: #0E4C64;
  font-size: 1rem;
}
.iconThenText {
  color: #0E4C64;
}

/* src/components/common/FieldSetInput/index.scss */
.fieldset {
  border: solid thin lightgray;
  border-radius: 3px;
  margin: 0;
  padding: 0;
  overflow: hidden;
  flex: unset !important;
}
.fieldset > legend {
  font-size: 0.75rem;
  color: var(--lightgray);
  margin: 0 10px;
  padding: 0;
  background-color: transparent;
}
.fieldset > input {
  border: none;
  outline: none;
  width: calc(100% - 20px);
  padding: 5px 10px 7.5px 10px;
  font-size: 1rem;
  background-color: transparent;
}
.fieldset > input::placeholder {
  color: transparent;
}
.fieldset > input:disabled {
  background-color: white;
}
.fieldset > input:disabled::-webkit-input-placeholder {
  color: white;
}
.fieldset:has(input:disabled) {
  background-color: white;
  border: none;
}
.fieldset:has(input:disabled) legend::after {
  content: ":";
  padding-left: 1px;
}
.longLegend {
  font-size: 0.75rem;
  color: var(--lightgray);
  margin: 0 0px !important;
  padding: 0;
  background-color: transparent;
}
.longLegend {
  font-size: 0.75rem;
  color: var(--lightgray);
  margin: 0 0px !important;
  padding: 0;
  background-color: transparent;
}
.fieldset:is([input-type=checkbox]) {
  position: relative;
  border: none;
  padding: 5px 0;
}
.fieldset:is([input-type=checkbox]) > legend {
  color: var(--black);
}
.fieldset:is([input-type=checkbox])[data-disabled=true] > legend::after {
  content: ":";
  padding-left: 1px;
}
.toggleContainer {
  display: flex;
  border-radius: 3px;
  width: calc(10rem + 4px);
  position: relative;
}
.toggleContainer > span {
  min-width: 5rem;
  text-align: center;
  font-size: 0.75rem;
  font-weight: 600;
  padding: 5px 0;
  cursor: pointer;
  border: solid 1px lightgray;
  color: lightgray;
  z-index: 1;
  z-index: unset;
}
.toggleContainer > span:first-child {
  border-radius: 3px 0 0 3px;
}
.toggleContainer > span:nth-child(2) {
  border-radius: 0 3px 3px 0;
}
.toggleContainer > span[data-toggled=true] {
  background-color: var(--primary-color);
  color: white;
  border-color: var(--primary-color);
}
.toggleContainer > span > span {
  position: relative;
}
.toggleContainer:has(.marker[data-toggled=true]) > span:first-child {
  z-index: 3;
  z-index: unset;
  border-color: var(--primary-color);
  color: white;
  transition:
    border-color 0s 500ms,
    z-index 0s 500ms,
    color 500ms 0s;
}
.toggleContainer:has(.marker[data-toggled=false]) > span:nth-child(2) {
  z-index: 3;
  z-index: unset;
  border-color: var(--primary-color);
  color: white;
  transition:
    border-color 0s 500ms,
    z-index 0s 500ms,
    color 500ms 0s;
}
.toggleContainer[data-disabled=true] {
}
.toggleContainer[data-disabled=true] > :not(.disabledLabel) {
  display: none;
}
.disabledLabel {
  padding-left: 10px;
}
.marker {
  position: absolute;
  min-width: calc(5rem + 2px);
  height: 100%;
  background-color: var(--primary-color);
  z-index: 2;
  z-index: unset;
  transition: right 500ms;
}
.marker > span {
  color: white;
  position: absolute;
  width: calc(5rem + 2px);
  height: 100%;
  display: grid;
  place-items: center;
  cursor: pointer;
  font-size: 0.75rem;
  font-weight: 600;
}
.marker:is([data-toggled=false], :not([data-toggled])) {
  right: 0;
  border-radius: 0 3px 3px 0;
}
.marker[data-toggled=true] {
  right: calc(100% - (5rem + 2px));
  border-radius: 3px 0 0 3px;
}
.fieldsetCustom {
  border: solid thin lightgray;
  border-radius: 3px;
  margin: 0;
  padding: 0;
  overflow: hidden;
  flex: unset !important;
}
.fieldsetCustom > legend {
  font-size: 0.75rem;
  color: var(--lightgray);
  margin: 0 10px;
  padding: 0;
  background-color: transparent;
}
.fieldsetCustom > input {
  border: none;
  outline: none;
  width: calc(100% - 20px);
  padding: 5px 10px 7.5px 10px;
  font-size: 1rem;
  background-color: #e9eff6 !important;
}
.fieldsetCustom > input::placeholder {
  color: transparent;
}
.fieldsetCustom > input:disabled {
  background-color: #e9eff6 !important;
}
.fieldsetCustom > input:disabled::-webkit-input-placeholder {
  color: transparent;
}
.fieldsetCustom:has(input:disabled) {
  background-color: #e9eff6 !important;
}
.fieldsetCustom:has(input:disabled) legend::after {
  content: ":";
  padding-left: 1px;
}

/* src/components/common/LoadingOverlay/index.scss */
.background,
.hidden,
.shown {
  display: grid;
  place-items: center;
  position: fixed;
  height: 100%;
  z-index: 9998;
  background-color: rgba(102, 102, 102, 0.4);
  padding: 0;
  margin: 0;
  width: 100%;
}
.shown {
  display: grid;
}
.hidden {
  display: none;
}

/* src/components/common/YellowButton/index.scss */
.yellowButton {
  min-width: 5.5rem;
  padding: 0.6rem;
  font-size: 0.75rem;
  border-radius: 5px;
  cursor: pointer;
  color: white;
  font-weight: bold;
  background-color: #d28c00;
  border: none;
  align-items: center;
  line-height: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 5px;
}
@media (max-width: 648px) {
  .yellowButton {
    min-width: 2rem;
    width: 2rem;
    height: 2rem;
    padding: 0.2rem;
  }
  .yellowButton :nth-child(2) {
    display: none;
  }
}

/* src/components/common/SkeletonSpan/index.scss */
.skeleton {
  overflow: hidden;
  position: relative;
  overflow: hidden;
  background-color: #DDDBDD;
  border-radius: 5px;
  height: 1em;
}
.skeleton::after {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  transform: translateX(-100%);
  background-image:
    linear-gradient(
      90deg,
      rgba(255, 255, 255, 0) 0,
      rgba(255, 255, 255, 0.2) 20%,
      rgba(255, 255, 255, 0.5) 60%,
      rgba(255, 255, 255, 0));
  animation: shimmer 2s infinite;
  content: "";
}
@keyframes shimmer {
  100% {
    transform: translateX(100%);
  }
}

/* src/components/common/MatrixInput/index.scss */
:root {
  --input-color: var {
    --black;
  }
  --input-border: var(--light-primary-color);
  --input-background: var(--page-color);
  --input-placeholder: var(--lightgray);
  --input-border-focus: var(--light-primary-color);
  --group-color: var(--page-color);
  --group-border: var(--light-primary-color);
  --group-background: var(--light-primary-color);
  --group-color-focus: var(--page-color);
  --group-border-focus: var(--light-primary-color);
  --group-background-focus: var(--light-primary-color);
}
.form-field {
  display: block;
  width: 100%;
  padding: 5px 5px;
  line-height: 25px;
  font-size: 14px;
  font-weight: 500;
  font-family: inherit;
  border-radius: 6px;
  -webkit-appearance: none;
  transition: border 0.3s ease;
}
.form-field::placeholder {
  color: var(--input-placeholder);
}
.form-field:focus {
  outline: none;
  border-color: var(--input-border-focus);
}
.form-group {
  position: relative;
  display: flex;
  height: 25px;
  margin-bottom: 5px;
}
@media (max-width: 480px) {
  .form-group {
    width: 100%;
  }
}
.form-group > span,
.form-group .form-field {
  white-space: nowrap;
  display: block;
}
.form-group > span:not(:first-child):not(:last-child),
.form-group .form-field:not(:first-child):not(:last-child) {
  border-radius: 0;
}
.form-group > span:first-child,
.form-group .form-field:first-child {
  border-radius: 2px 0 0 2px;
}
.form-group > span:last-child,
.form-group .form-field:last-child {
  border-radius: 0 2px 2px 0;
}
.form-group > span:not(:first-child),
.form-group .form-field:not(:first-child) {
  margin-left: -1px;
}
.form-group .form-field {
  position: relative;
  z-index: 1;
  margin-top: 0;
  margin-bottom: 0;
}
.form-group > span {
  text-align: center;
  width: 100px;
  font-size: 10px;
  line-height: 25px;
  font-weight: bold;
  transition:
    background 0.3s ease,
    border 0.3s ease,
    color 0.3s ease;
}
.form-group:focus-within > span {
  color: var(--group-color-focus);
  background: var(--group-background-focus);
  border-color: var(--group-border-focus);
}

/* src/components/common/ModalDivider/index.scss */
.Divider {
  display: flex;
  flex-direction: row;
}
@media (max-width: 1250px) {
  .Divider {
    flex-direction: column;
  }
}
.leftSide {
  width: 100%;
  display: flex;
  flex-direction: column;
  justify-content: space-evenly;
  gap: 10px;
}
.divider {
  border-left: 3px solid var(--primary-color);
  border-radius: 5px;
  height: auto;
  margin-left: 20px;
  margin-right: 20px;
}
@media (max-width: 1250px) {
  .divider {
    border-bottom: 3px solid var(--primary-color);
    border-left: 0;
    margin: 0;
    margin-top: 20px;
    margin-bottom: 20px;
  }
}
.right {
  display: flex;
  margin-top: 10px;
  flex-wrap: wrap;
  width: 560px;
  height: 270px;
  overflow-y: auto;
  overflow-x: wrap;
}
@media (max-width: 1250px) {
  .right {
    width: auto;
    flex-basis: auto;
    align-content: center;
    height: auto;
    overflow-y: wrap;
  }
}

/* src/components/common/SideFilterStationary/index.scss */
.sideFilter,
.sideFilterHidden {
  display: flex;
  flex-direction: column;
  gap: 2rem;
  min-width: 25rem;
  width: fit-content;
  padding: 1.5rem;
  box-sizing: border-box;
  background-color: #f1f7fd;
  left: 0rem;
  height: auto;
  min-height: calc(100vh - var(--content-margin-default));
  max-height: 100rem;
  position: relative;
  transition: max-height 0.5s ease-in;
}
@media (max-width: 480px) {
  .sideFilter,
  .sideFilterHidden {
    min-height: 0;
    width: 95%;
  }
}
@media (max-width: 480px) {
  .sideFilterHidden {
    max-height: 1.5rem;
    overflow: hidden;
    transition: max-height 0.5s ease-out;
  }
}
.filterHeaderArea {
  width: 100%;
  display: flex;
  justify-content: space-between;
  font-size: 1.5rem;
  font-weight: 600;
  color: #353535;
}
.filterFieldContainer,
.filterFieldContainerHidden {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  opacity: 1;
  transition: opacity 0.3s ease-in-out;
}
.filterFieldContainer > button,
.filterFieldContainerHidden > button {
  align-self: center;
}
@media (max-width: 480px) {
  .filterFieldContainerHidden {
    opacity: 0;
    transition: opacity 0.3s ease-in-out;
  }
}
.hideButton {
  color: #052a38;
  display: flex;
  align-items: center;
  width: 100%;
}
.hideButton > div {
  font-size: 1.3rem;
  font-weight: 600;
  color: #353535;
}
.hideButton > .line {
  flex: 1.5;
  margin-left: 1rem;
  margin-right: 1rem;
  display: none;
}
@media (max-width: 480px) {
  .hideButton > .line {
    display: block;
  }
}
.hideButton > .HiddenOnBigScreen {
  display: none;
}
@media (max-width: 480px) {
  .hideButton > .HiddenOnBigScreen {
    display: block;
  }
}
@media (max-width: 480px) {
  .hideButton {
    cursor: pointer;
  }
  .hideButton > div {
    font-size: 1rem;
  }
}
.customButton {
  min-width: 5.5rem;
  padding: 0.6rem;
  font-size: 1rem;
  border-radius: 5px;
  cursor: pointer;
  color: white;
  font-weight: bold;
  background-color: var(--light-primary-color);
  border: none;
  align-items: center;
  line-height: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 5px;
  align-self: center;
}
@media (max-width: 480px) {
  .customButton {
    width: 100%;
  }
}
.buttonGroup {
  display: flex;
  flex-direction: row;
  justify-content: space-evenly;
  align-items: center;
  gap: 2rem;
  margin-top: 0.5rem;
}

/* src/components/common/FilterToggle/index.scss */
.toggleContainer {
  display: flex;
  border-radius: 3px;
  width: calc(12rem + 4px);
  position: relative;
  margin-bottom: 1rem;
}
.toggleContainer > span {
  min-width: 7rem;
  text-align: center;
  font-size: 0.75rem;
  font-weight: 600;
  padding: 5px 0;
  cursor: pointer;
  border: solid 1px lightgray;
  color: lightgray;
  z-index: 1;
  z-index: unset;
}
.toggleContainer > span:first-child {
  border-radius: 3px 0 0 3px;
}
.toggleContainer > span:nth-child(2) {
  border-radius: 0 3px 3px 0;
}
.toggleContainer > span[data-toggled=true] {
  background-color: var(--primary-color);
  color: white;
  border-color: var(--primary-color);
}
.toggleContainer > span > span {
  position: relative;
}
.toggleContainer:has(.marker[data-toggled=true]) > span:first-child {
  z-index: 3;
  z-index: unset;
  border-color: var(--primary-color);
  color: white;
  transition:
    border-color 0s 500ms,
    z-index 0s 500ms,
    color 500ms 0s;
}
.toggleContainer:has(.marker[data-toggled=false]) > span:nth-child(2) {
  z-index: 3;
  z-index: unset;
  border-color: var(--primary-color);
  color: white;
  transition:
    border-color 0s 500ms,
    z-index 0s 500ms,
    color 500ms 0s;
}
.toggleContainer[data-disabled=true] > * {
  display: none;
}
.toggleContainer[data-disabled=true]:has(.marker[data-toggled=true])::after {
  padding-left: 10px;
  content: "For Approval";
}
.toggleContainer[data-disabled=true]:has(.marker[data-toggled=false])::after {
  padding-left: 10px;
  content: "History";
}
.marker {
  position: absolute;
  min-width: calc(7rem + 2px);
  height: 100%;
  background-color: var(--primary-color);
  z-index: 2;
  z-index: unset;
  transition: right 500ms;
}
.marker::after {
  color: white;
  position: absolute;
  width: calc(7rem + 2px);
  height: 100%;
  display: grid;
  place-items: center;
  cursor: pointer;
  font-size: 0.75rem;
  font-weight: 600;
}
.marker[data-toggled=true]::after {
  content: "For Approval";
}
.marker[data-toggled=false]::after {
  content: "History";
}
.marker:is([data-toggled=false], :not([data-toggled])) {
  right: -2rem;
  border-radius: 0 3px 3px 0;
}
.marker[data-toggled=true] {
  right: calc(100% - (7rem + 2px));
  border-radius: 3px 0 0 3px;
}

/* src/components/common/FormFormatter/FormContentGrid/index.module.scss */
.grid {
  display: grid;
  grid-template-columns: 3fr 1fr;
  column-gap: 5rem;
  margin-bottom: 1rem;
  row-gap: 1rem;
}
@media (max-width: 560px) {
  .grid {
    grid-template-columns: 1fr;
  }
}
.grid > * {
  margin-left: 1rem;
}
.grid > input {
  border: solid thin lightgray;
  border-radius: 3px;
  padding: 5px 10px 7.5px 10px;
  height: 1rem;
}
.grid > .ToggleContainer {
  border: solid thin lightgray;
  border-radius: 3px;
  margin: 0;
  padding: 0;
  overflow: hidden;
  flex: unset !important;
}
@media (max-width: 560px) {
  .grid:last-child {
    margin-bottom: 1rem;
  }
}

/* src/components/common/FormFormatter/FormContentNav/index.module.scss */
.navBar {
  min-width: 8rem;
  padding: 1.5rem;
  padding-bottom: 0;
}
.navArea {
  color: #888b8d;
  display: flex;
  flex-direction: row;
  gap: 1rem;
  flex-wrap: wrap;
  padding: 0.5rem;
}
.navArea > a {
  cursor: pointer;
}
.navItem {
  cursor: pointer;
}
.navItem:hover {
  color: #1b4b58 !important;
}
.selectedNavItem {
  border-bottom: solid thin #1b4b58;
  color: #1b4b58;
}

/* src/components/common/ListMakerComponent/index.scss */
.listMakerContainer {
  flex: 1;
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  transition: linear 0.2s;
  min-width: 18rem;
  flex-wrap: wrap;
  box-sizing: border-box;
}
.listMakerHeader {
  display: flex;
  flex: 1;
  flex-direction: row;
  align-items: center;
  gap: 0.5rem;
  border-bottom: solid thin #353535;
  padding-block: 5px;
  box-sizing: border-box;
  padding-bottom: 1rem;
}
.listMakerHeader > div {
  flex: 1;
}
@media (max-width: 768px) {
  .listMakerHeader {
    flex-direction: column;
  }
  .listMakerHeader > * {
    flex: 1 !important;
    max-width: none !important;
    width: 100%;
  }
}
.line {
  flex: 1.5;
  height: 100%;
}
.listMakerHeader B {
  font-size: 1rem;
  font-weight: bold;
  color: #353535;
  text-transform: uppercase;
  padding-left: 1rem;
  padding-right: 2rem;
}
.noItems {
  background-color: transparent !important;
  font-size: 1rem;
  padding: 5px;
}
.removeButton {
  background-color: transparent !important;
  border: none;
  outline: none;
  align-items: center;
  padding: 0 !important;
  width: auto;
  justify-content: center;
  color: #ff0000;
  font-weight: bold;
}
.removeButton:hover {
  cursor: pointer;
}
.iconToExpand,
.iconExpanded {
  background-color: transparent !important;
  border: none;
  outline: none;
  align-items: center;
  padding: 0 !important;
  width: auto;
  justify-content: center;
  transition: linear 0.2s;
}
.listContent {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  padding-inline: 0.5rem;
  height: 8rem;
  overflow-y: auto;
}
.listContent > div:hover {
  background-color: #dedede;
}
.listContentLoading {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  padding-inline: 0.5rem;
  height: 8rem;
  overflow-y: auto;
}
.removableRow {
  display: flex;
  flex-wrap: nowrap;
  justify-content: space-between;
  align-items: center;
  width: auto;
  padding: 5px;
}
.iconExpanded > * {
  transform: rotate(90deg);
  transition: linear 0.2s;
}
@keyframes extend {
  from {
    height: 0;
  }
  to {
    height: auto;
  }
}
.content,
.contentExpanded {
  width: 100%;
  overflow: hidden;
  height: 0;
  box-sizing: border-box;
}
.contentExpanded {
  animation: extend 0.1s ease-in-out 0s 1 forwards;
}

/* src/components/common/StepsMaker/index.scss */
.stepsRow {
  display: flex;
  flex-direction: row;
  width: 100%;
  gap: 1rem;
  min-height: 6.5rem;
  justify-content: space-around;
  position: relative;
}
.line {
  position: absolute;
  width: 80%;
  top: 2rem;
  z-index: 1;
  font-weight: bold;
  border: 1px solid #e6e6e6;
  color: #bababa !important;
}
.stepColumnActive {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  align-items: center;
  justify-content: center;
  z-index: 2;
  transition: 0.2s ease-in;
}
.stepColumn {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  align-items: center;
  justify-content: center;
  z-index: 2;
  transition: 0.2s ease-in;
}
.outerCircle {
  width: 4rem;
  height: 4rem;
  border-radius: 50%;
  border: solid 3px #bababa;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: white;
  transition: 0.2s ease-in;
}
.smallText {
  color: #e6e6e6;
  font-size: 1rem;
  display: none;
}
.columnDiv {
  display: flex;
  flex-direction: column;
  text-align: left;
}
.outerCircleActive {
  width: 4rem;
  height: 4rem;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: white;
  border: solid 3px #214650;
  box-shadow: 0 2px 10px rgba(34, 139, 34, 0.3);
  transition: 0.2s ease-in;
}
.innerCircle {
  width: 3.7rem;
  height: 3.7rem;
  border-radius: 50%;
  border: solid 3px #e6e6e6;
  display: flex;
  align-items: center;
  justify-content: center;
}
.innerCircleActive {
  width: 3.7rem;
  height: 3.7rem;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  border: solid 3px #d1dbdd;
}
.number {
  font-weight: bold;
  color: #bababa;
}
.numberActive {
  font-weight: bold;
  color: #214650;
}
.label {
  color: #bababa;
}
.labelActive {
  font-weight: bold;
  color: #214650;
}
.loadline {
  z-index: 2;
  display: none;
  font-weight: bold;
  border: 1px solid #05db05;
  color: #bababa !important;
}
@media (max-width: 850px) {
  .smallText {
    display: block !important;
  }
  .stepColumnActive {
    flex-direction: row;
  }
  .stepColumn {
    display: none;
  }
  .line {
    width: 100% !important;
    bottom: 0px !important;
    top: unset;
  }
  .loadline {
    display: block;
    position: absolute;
    bottom: 0px !important;
    top: unset;
    left: 0px;
  }
  .stepsRow {
    justify-content: start !important;
  }
}

/* src/components/shad/FieldSetInput/index.module.scss */
.fieldset {
  margin: 0;
  padding: 0;
  overflow: hidden;
  flex: unset !important;
}
.fieldset > legend {
  font-size: 0.75rem;
  margin: 0 10px;
  padding: 0;
  background-color: transparent;
}
.fieldset > input {
  border: none;
  outline: none;
  width: calc(100% - 20px);
  padding: 5px 10px 7.5px 10px;
  font-size: 1rem;
  background-color: transparent;
}
.fieldset > input::placeholder {
  color: transparent;
}
.fieldset > textarea {
  border: none;
  outline: none;
  width: calc(100% - 20px);
  padding: 5px 10px 7.5px 10px;
  font-size: 1rem;
  resize: none;
  background-color: transparent;
}
.fieldset > textarea::placeholder {
  color: transparent;
}
.fieldset:has(textarea:disabled) {
  background-color: transparent;
  border: none;
}
.fieldset:has(textarea:disabled) legend::after {
  content: ":";
  padding-left: 1px;
}
.fieldset:has(input:disabled) {
  border: none;
}
.fieldset:has(input:disabled) legend::after {
  content: ":";
  padding-left: 1px;
}
.longLegend {
  font-size: 0.75rem;
  margin: 0 0px !important;
  padding: 0;
  background-color: transparent;
}
.fieldset:is([input-type=checkbox]) {
  position: relative;
  border: none;
  padding: 5px 0;
}
.fieldset:is([input-type=checkbox])[data-disabled=true] > legend::after {
  content: ":";
  padding-left: 1px;
}
.toggleContainer {
  display: flex;
  border-radius: 3px;
  width: calc(10rem + 4px);
  position: relative;
}
.toggleContainer > span {
  min-width: 5rem;
  text-align: center;
  font-size: 0.75rem;
  font-weight: 600;
  padding: 5px 0;
  cursor: pointer;
  border: solid 1px lightgray;
  color: lightgray;
  z-index: 1;
  z-index: unset;
}
.toggleContainer > span:first-child {
  border-radius: 3px 0 0 3px;
}
.toggleContainer > span:nth-child(2) {
  border-radius: 0 3px 3px 0;
}
.toggleContainer > span[data-toggled=true] {
  background-color: var(--primary-color);
  color: white;
  border-color: var(--primary-color);
}
.toggleContainer > span > span {
  position: relative;
}
.toggleContainer:has(.marker[data-toggled=true]) > span:first-child {
  z-index: 3;
  z-index: unset;
  border-color: var(--primary-color);
  color: white;
  transition:
    border-color 0s 500ms,
    z-index 0s 500ms,
    color 500ms 0s;
}
.toggleContainer:has(.marker[data-toggled=false]) > span:nth-child(2) {
  z-index: 3;
  z-index: unset;
  border-color: var(--primary-color);
  color: white;
  transition:
    border-color 0s 500ms,
    z-index 0s 500ms,
    color 500ms 0s;
}
.toggleContainer[data-disabled=true] {
}
.toggleContainer[data-disabled=true] > :not(.disabledLabel) {
  display: none;
}
.disabledLabel {
  padding-left: 10px;
}
.marker {
  position: absolute;
  min-width: calc(5rem + 2px);
  height: 100%;
  background-color: var(--primary-color);
  z-index: 2;
  z-index: unset;
  transition: right 500ms;
}
.marker > span {
  color: white;
  position: absolute;
  width: calc(5rem + 2px);
  height: 100%;
  display: grid;
  place-items: center;
  cursor: pointer;
  font-size: 0.75rem;
  font-weight: 600;
}
.marker:is([data-toggled=false], :not([data-toggled])) {
  right: 0;
  border-radius: 0 3px 3px 0;
}
.marker:is([data-toggled=true]) {
  right: calc(100% - (5rem + 2px));
  border-radius: 3px 0 0 3px;
}
.fieldsetCustom {
  border: solid thin lightgray;
  border-radius: 3px;
  margin: 0;
  padding: 0;
  overflow: hidden;
  flex: unset !important;
}
.fieldsetCustom > legend {
  font-size: 0.75rem;
  color: var(--lightgray);
  margin: 0 10px;
  padding: 0;
  background-color: transparent;
}
.fieldsetCustom > input {
  border: none;
  outline: none;
  width: calc(100% - 20px);
  padding: 5px 10px 7.5px 10px;
  font-size: 1rem;
  background-color: #e9eff6 !important;
}
.fieldsetCustom > input::placeholder {
  color: transparent;
}
.fieldsetCustom > input:disabled {
  background-color: #e9eff6 !important;
}
.fieldsetCustom > input:disabled::-webkit-input-placeholder {
  color: transparent;
}
.fieldsetCustom:has(input:disabled) {
  background-color: #e9eff6 !important;
}
.fieldsetCustom:has(input:disabled) legend::after {
  content: ":";
  padding-left: 1px;
}

/* src/components/shad/FieldSetInput/index2.module.scss */
.fieldset {
  margin: 0;
  padding: 0;
  overflow: hidden;
  flex: unset !important;
}
.fieldset > legend {
  font-size: 0.75rem;
  margin: 0 10px;
  padding: 0;
  background-color: transparent;
}
.fieldset > input {
  border: none;
  outline: none;
  width: calc(100% - 20px);
  padding: 5px 10px 7.5px 10px;
  font-size: 1rem;
  background-color: transparent;
}
.fieldset > input::placeholder {
  color: transparent;
}
.fieldset > textarea {
  border: none;
  outline: none;
  width: calc(100% - 20px);
  padding: 5px 10px 7.5px 10px;
  font-size: 1rem;
  resize: none;
  background-color: transparent;
}
.fieldset > textarea::placeholder {
  color: transparent;
}
.fieldset:has(textarea:disabled) {
  background-color: transparent;
  border: none;
}
.fieldset:has(textarea:disabled) legend::after {
  content: ":";
  padding-left: 1px;
}
.fieldset:has(input:disabled) {
  background-color: rgb(233, 233, 233);
}
.fieldset:has(input:disabled) legend::after {
  content: ":";
  padding-left: 1px;
}
.fieldset:has(input:disabled) legend {
  color: rgb(178, 178, 178);
}
.longLegend {
  font-size: 0.75rem;
  margin: 0 0px !important;
  padding: 0;
  background-color: transparent;
}
.fieldset:is([input-type=checkbox]) {
  position: relative;
  border: none;
  padding: 5px 0;
}
.fieldset:is([input-type=checkbox])[data-disabled=true] > legend::after {
  content: ":";
  padding-left: 1px;
}
.toggleContainer {
  display: flex;
  border-radius: 3px;
  width: calc(10rem + 4px);
  position: relative;
}
.toggleContainer > span {
  min-width: 5rem;
  text-align: center;
  font-size: 0.75rem;
  font-weight: 600;
  padding: 5px 0;
  cursor: pointer;
  border: solid 1px lightgray;
  color: lightgray;
  z-index: 1;
  z-index: unset;
}
.toggleContainer > span:first-child {
  border-radius: 3px 0 0 3px;
}
.toggleContainer > span:nth-child(2) {
  border-radius: 0 3px 3px 0;
}
.toggleContainer > span[data-toggled=true] {
  background-color: var(--primary-color);
  color: white;
  border-color: var(--primary-color);
}
.toggleContainer > span > span {
  position: relative;
}
.toggleContainer:has(.marker[data-toggled=true]) > span:first-child {
  z-index: 3;
  z-index: unset;
  border-color: var(--primary-color);
  color: white;
  transition:
    border-color 0s 500ms,
    z-index 0s 500ms,
    color 500ms 0s;
}
.toggleContainer:has(.marker[data-toggled=false]) > span:nth-child(2) {
  z-index: 3;
  z-index: unset;
  border-color: var(--primary-color);
  color: white;
  transition:
    border-color 0s 500ms,
    z-index 0s 500ms,
    color 500ms 0s;
}
.toggleContainer[data-disabled=true] {
}
.toggleContainer[data-disabled=true] > :not(.disabledLabel) {
  display: none;
}
.disabledLabel {
  padding-left: 10px;
}
.marker {
  position: absolute;
  min-width: calc(5rem + 2px);
  height: 100%;
  background-color: var(--primary-color);
  z-index: 2;
  z-index: unset;
  transition: right 500ms;
}
.marker > span {
  color: white;
  position: absolute;
  width: calc(5rem + 2px);
  height: 100%;
  display: grid;
  place-items: center;
  cursor: pointer;
  font-size: 0.75rem;
  font-weight: 600;
}
.marker:is([data-toggled=false], :not([data-toggled])) {
  right: 0;
  border-radius: 0 3px 3px 0;
}
.marker:is([data-toggled=true]) {
  right: calc(100% - (5rem + 2px));
  border-radius: 3px 0 0 3px;
}
.fieldsetCustom {
  border: solid thin lightgray;
  border-radius: 3px;
  margin: 0;
  padding: 0;
  overflow: hidden;
  flex: unset !important;
}
.fieldsetCustom > legend {
  font-size: 0.75rem;
  color: var(--lightgray);
  margin: 0 10px;
  padding: 0;
  background-color: transparent;
}
.fieldsetCustom > input {
  border: none;
  outline: none;
  width: calc(100% - 20px);
  padding: 5px 10px 7.5px 10px;
  font-size: 1rem;
  background-color: #e9eff6 !important;
}
.fieldsetCustom > input::placeholder {
  color: transparent;
}
.fieldsetCustom > input:disabled {
  background-color: #e9eff6 !important;
}
.fieldsetCustom > input:disabled::-webkit-input-placeholder {
  color: transparent;
}
.fieldsetCustom:has(input:disabled) {
  background-color: #e9eff6 !important;
}
.fieldsetCustom:has(input:disabled) legend::after {
  content: ":";
  padding-left: 1px;
}

/* src/components/shad/FieldSetInput/matrix.module.scss */
.formField {
  display: block;
  width: 100%;
  padding: 5px 5px;
  line-height: 25px;
  font-size: 14px;
  font-weight: 500;
  font-family: inherit;
  border-radius: 6px;
  -webkit-appearance: none;
  transition: border 0.3s ease;
}
.formField::placeholder {
  color: var(--input-placeholder);
}
.formField:focus {
  outline: none;
  border-color: var(--input-border-focus);
}
.formGroup {
  position: relative;
  display: flex;
  height: 25px;
  margin-bottom: 5px;
  width: 100%;
}
.formGroup > span,
.formGroup .formField {
  white-space: nowrap;
  display: block;
}
.formGroup > span:not(:first-child):not(:last-child),
.formGroup .formField:not(:first-child):not(:last-child) {
  border-radius: 0;
}
.formGroup > span:first-child,
.formGroup .formField:first-child {
  border-radius: 2px 0 0 2px;
}
.formGroup > span:last-child,
.formGroup .formField:last-child {
  border-radius: 0 2px 2px 0;
}
.formGroup > span:not(:first-child),
.formGroup .formField:not(:first-child) {
  margin-left: -1px;
}
.formGroup .formField {
  position: relative;
  z-index: 1;
  margin-top: 0;
  margin-bottom: 0;
}
.formGroup > span {
  text-align: center;
  width: 100px;
  font-size: 10px;
  line-height: 25px;
  font-weight: bold;
  transition:
    background 0.3s ease,
    border 0.3s ease,
    color 0.3s ease;
}
.formGroup:focus-within > span {
  color: var(--group-color-focus);
  background: var(--group-background-focus);
  border-color: var(--group-border-focus);
}
/*! tailwindcss v4.1.12 | MIT License | https://tailwindcss.com */
/*# sourceMappingURL=index.css.map */